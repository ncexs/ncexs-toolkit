name: üöÄ ncexs Toolkit Auto Release

on:
  push:
    tags:
      - 'v*'  # Jalan otomatis setiap ada tag baru, misalnya v2.3-beta1

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set version from tag
        id: vars
        run: |
          echo "VERSION=${{ github.ref_name }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: üîç Find latest PS1 file
        id: find_ps1
        run: |
          $latest = Get-ChildItem -Path . -Filter *.ps1 | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if (-not $latest) {
            Write-Error "‚ùå No .ps1 file found in repository!"
            exit 1
          }
          echo "LATEST_FILE=$($latest.Name)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Output "Found latest file: $($latest.Name)"

      - name: üß© Prepare PowerShell release file
        run: |
          $source = "${{ env.LATEST_FILE }}"
          $version = "${{ env.VERSION }}"
          $target = "ncexs-Toolkit-$version.ps1"

          # Tambahkan watermark versi di baris pertama
          $content = Get-Content $source
          "# Version: $version" | Out-File $target -Encoding utf8
          $content | Out-File $target -Encoding utf8 -Append

          Write-Output "File ready: $target"

      - name: üßæ Generate changelog from recent commits
        id: changelog
        run: |
          $log = git log -1 --pretty=format:"- %s"
          echo "CHANGELOG=$log" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Output "Generated changelog: $log"

      - name: üì¶ Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: üöÄ ncexs Toolkit ${{ env.VERSION }}
          body: |
            ## üß∞ ncexs Toolkit ‚Äì ${{ env.VERSION }}

            ### üÜï What's New
            ${{ env.CHANGELOG }}

            ---
            üîß Automatically generated via GitHub Actions CI/CD.
          files: ncexs-Toolkit-${{ env.VERSION }}.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
