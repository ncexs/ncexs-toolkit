name: 🚀 ncexs Toolkit Auto CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-test-release:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup PowerShell
        uses: actions/setup-powershell@v2

      # =======================
      # 🔍 LINTER (PSScriptAnalyzer)
      # =======================
      - name: 🔍 Lint PowerShell Script
        run: |
          pwsh -Command "Install-Module PSScriptAnalyzer -Force"
          pwsh -Command "Invoke-ScriptAnalyzer -Path . -Recurse -Severity Warning"

      # =======================
      # 🧪 TEST
      # =======================
      - name: 🧪 Test PowerShell Script
        run: |
          echo "Running test..."
          pwsh -Command "
            try {
              .\ncexs-Toolkit-v2.3-beta1.ps1 -ErrorAction Stop
              Write-Host '✅ Script ran successfully.'
            } catch {
              Write-Host '❌ Error detected: ' + $_.Exception.Message
              exit 1
            }
          "

      # =======================
      # 🪄 AUTO CHANGELOG
      # =======================
      - name: 🪄 Generate Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: ".github/changelog-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # =======================
      # 🧮 VERSION DETECTION
      # =======================
      - name: 🧮 Get version from filename
        id: version
        run: |
          FILE=$(ls *.ps1 | head -n 1)
          VERSION=$(echo $FILE | grep -oE 'v[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?')
          echo "file=$FILE" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # =======================
      # 🚀 RELEASE
      # =======================
      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "ncexs Toolkit – ${{ steps.version.outputs.version }}"
          body: |
            ## 🧰 ncexs Toolkit – ${{ steps.version.outputs.version }}

            ${{ steps.changelog.outputs.changelog }}

          files: ${{ steps.version.outputs.file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
